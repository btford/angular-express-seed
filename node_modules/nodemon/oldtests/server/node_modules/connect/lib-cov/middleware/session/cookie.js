/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['middleware/session/cookie.js']) {
  _$jscoverage['middleware/session/cookie.js'] = [];
  _$jscoverage['middleware/session/cookie.js'][13] = 0;
  _$jscoverage['middleware/session/cookie.js'][24] = 0;
  _$jscoverage['middleware/session/cookie.js'][25] = 0;
  _$jscoverage['middleware/session/cookie.js'][26] = 0;
  _$jscoverage['middleware/session/cookie.js'][27] = 0;
  _$jscoverage['middleware/session/cookie.js'][28] = 0;
  _$jscoverage['middleware/session/cookie.js'][29] = 0;
  _$jscoverage['middleware/session/cookie.js'][38] = 0;
  _$jscoverage['middleware/session/cookie.js'][48] = 0;
  _$jscoverage['middleware/session/cookie.js'][49] = 0;
  _$jscoverage['middleware/session/cookie.js'][60] = 0;
  _$jscoverage['middleware/session/cookie.js'][71] = 0;
  _$jscoverage['middleware/session/cookie.js'][84] = 0;
  _$jscoverage['middleware/session/cookie.js'][97] = 0;
  _$jscoverage['middleware/session/cookie.js'][115] = 0;
  _$jscoverage['middleware/session/cookie.js'][126] = 0;
}
_$jscoverage['middleware/session/cookie.js'][13]++;
var utils = require("../../utils"), cookie = require("cookie");
_$jscoverage['middleware/session/cookie.js'][24]++;
var Cookie = module.exports = (function Cookie(options) {
  _$jscoverage['middleware/session/cookie.js'][25]++;
  this.path = "/";
  _$jscoverage['middleware/session/cookie.js'][26]++;
  this.maxAge = null;
  _$jscoverage['middleware/session/cookie.js'][27]++;
  this.httpOnly = true;
  _$jscoverage['middleware/session/cookie.js'][28]++;
  if (options) {
    _$jscoverage['middleware/session/cookie.js'][28]++;
    utils.merge(this, options);
  }
  _$jscoverage['middleware/session/cookie.js'][29]++;
  this.originalMaxAge = undefined == this.originalMaxAge? this.maxAge: this.originalMaxAge;
});
_$jscoverage['middleware/session/cookie.js'][38]++;
Cookie.prototype = {set expires (date) {
  _$jscoverage['middleware/session/cookie.js'][48]++;
  this._expires = date;
  _$jscoverage['middleware/session/cookie.js'][49]++;
  this.originalMaxAge = this.maxAge;
}, get expires () {
  _$jscoverage['middleware/session/cookie.js'][60]++;
  return this._expires;
}, set maxAge (ms) {
  _$jscoverage['middleware/session/cookie.js'][71]++;
  this.expires = "number" == typeof ms? new Date(Date.now() + ms): ms;
}, get maxAge () {
  _$jscoverage['middleware/session/cookie.js'][84]++;
  return this.expires instanceof Date? this.expires.valueOf() - Date.now(): this.expires;
}, get data () {
  _$jscoverage['middleware/session/cookie.js'][97]++;
  return ({originalMaxAge: this.originalMaxAge, expires: this._expires, secure: this.secure, httpOnly: this.httpOnly, domain: this.domain, path: this.path});
}, serialize: (function (name, val) {
  _$jscoverage['middleware/session/cookie.js'][115]++;
  return cookie.serialize(name, val, this.data);
}), toJSON: (function () {
  _$jscoverage['middleware/session/cookie.js'][126]++;
  return this.data;
})};
_$jscoverage['middleware/session/cookie.js'].source = ["","/*!"," * Connect - session - Cookie"," * Copyright(c) 2010 Sencha Inc."," * Copyright(c) 2011 TJ Holowaychuk"," * MIT Licensed"," */","","/**"," * Module dependencies."," */","","var utils = require('../../utils')","  , cookie = require('cookie');","","/**"," * Initialize a new `Cookie` with the given `options`."," *"," * @param {IncomingMessage} req"," * @param {Object} options"," * @api private"," */","","var Cookie = module.exports = function Cookie(options) {","  this.path = '/';","  this.maxAge = null;","  this.httpOnly = true;","  if (options) utils.merge(this, options);","  this.originalMaxAge = undefined == this.originalMaxAge","    ? this.maxAge","    : this.originalMaxAge;","};","","/*!"," * Prototype."," */","","Cookie.prototype = {","","  /**","   * Set expires `date`.","   *","   * @param {Date} date","   * @api public","   */","  ","  set expires(date) {","    this._expires = date;","    this.originalMaxAge = this.maxAge;","  },","","  /**","   * Get expires `date`.","   *","   * @return {Date}","   * @api public","   */","","  get expires() {","    return this._expires;","  },","  ","  /**","   * Set expires via max-age in `ms`.","   *","   * @param {Number} ms","   * @api public","   */","  ","  set maxAge(ms) {","    this.expires = 'number' == typeof ms","      ? new Date(Date.now() + ms)","      : ms;","  },","","  /**","   * Get expires max-age in `ms`.","   *","   * @return {Number}","   * @api public","   */","","  get maxAge() {","    return this.expires instanceof Date","      ? this.expires.valueOf() - Date.now()","      : this.expires;","  },","","  /**","   * Return cookie data object.","   *","   * @return {Object}","   * @api private","   */","","  get data() {","    return {","        originalMaxAge: this.originalMaxAge","      , expires: this._expires","      , secure: this.secure","      , httpOnly: this.httpOnly","      , domain: this.domain","      , path: this.path","    }","  },","","  /**","   * Return a serialized cookie string.","   *","   * @return {String}","   * @api public","   */","","  serialize: function(name, val){","    return cookie.serialize(name, val, this.data);","  },","","  /**","   * Return JSON representation of this cookie.","   *","   * @return {Object}","   * @api private","   */","  ","  toJSON: function(){","    return this.data;","  }","};"];
